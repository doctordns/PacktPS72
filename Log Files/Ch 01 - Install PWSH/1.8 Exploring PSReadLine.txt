# 1.7 Exploring PSReadLine
#
#  Run on SRV1


PS C:\Foo> # 1.Getting commands in the PSReadLine module
PS C:\Foo> Get-Command -Module PSReadLine


CommandType    Name                           Version   Source
-----------    ----                           -------   ------
Function       PSConsoleHostReadLine          2.1.0     PSReadLine
Cmdlet         Get-PSReadLineKeyHandler       2.1.0     PSReadLine
Cmdlet         Get-PSReadLineOption           2.1.0     PSReadLine
Cmdlet         Remove-PSReadLineKeyHandler    2.1.0     PSReadLine
Cmdlet         Set-PSReadLineKeyHandler       2.1.0     PSReadLine
Cmdlet         Set-PSReadLineOption           2.1.0     PSReadLine






PS C:\Foo> # 2. Getting the first 10 PSReadLine key handlers
PS C:\Foo> Get-PSReadLineKeyHandler |
             Select-Object -First 10
               Sort-Object -Property Key |
                 Format-Table -Property Key, Function, Description

Basic editing functions
=======================

Key            Function           Description
---            --------           -----------
Enter          AcceptLine         Accept the input or move to the next line if input is missing a closing token.
Shift+Enter    AddLine            Move the cursor to the next line without attempting to execute the input
Backspace      BackwardDeleteChar Delete the character before the cursor
Ctrl+h         BackwardDeleteChar Delete the character before the cursor
Ctrl+Home      BackwardDeleteLine Delete text from the cursor to the start of the line
Ctrl+Backspace BackwardKillWord   Move the text from the start of the current or previous word to the cursor to the kill ring
Ctrl+w         BackwardKillWord   Move the text from the start of the current or previous word to the cursor to the kill ring
Ctrl+C         Copy               Copy selected region to the system clipboard.  If no region is selected, copy the whole line
Ctrl+c         CopyOrCancelLine   Either copy selected text to the clipboard, or if no text is selected, cancel editing the line with CancelLine.        
Ctrl+x         Cut                Delete selected region placing deleted text in the system clipboard






PS C:\Foo> # 3. Discovering a count of unbound key handlers
PS C:\Foo> $Unbound = (Get-PSReadLineKeyHandler -Unbound).count
PS C:\Foo> "$Unbound unbound key handlers"
116 unbound key handlers





PS C:\Foo> # 4. Getting the PSReadline options
PS C:\Foo> Get-PSReadLineOption

EditMode                               : Windows
AddToHistoryHandler                    : System.Func`2[System.String,System.Object]
HistoryNoDuplicates                    : True
HistorySavePath                        : C:\Users\Administrator\AppData\Roaming\Microsoft\Windows\
                                         PowerShell\PSReadLine\Visual Studio Code\Host_history.txt
HistorySaveStyle                       : SaveIncrementally
HistorySearchCaseSensitive             : False
HistorySearchCursorMovesToEnd          : False
MaximumHistoryCount                    : 4096
ContinuationPrompt                     : >>
ExtraPromptLineCount                   : 0
PromptText                             : {> }
BellStyle                              : Audible
DingDuration                           : 50
DingTone                               : 1221
CommandsToValidateScriptBlockArguments : {ForEach-Object, %, Invoke-Command, icm, Measure-Command, New-Module, nmo, 
                                         Register-EngineEvent,Register-ObjectEvent, Register-WMIEvent, Set-PSBreakpoint,
                                          sbp, Start-Job, sajb, Trace-Command, trcm,Use-Transaction, Where-Object, ?, where}
CommandValidationHandler               : 
CompletionQueryItems                   : 100
MaximumKillRingCount                   : 10
ShowToolTips                           : True
ViModeIndicator                        : None
WordDelimiters                         : ;:,.[]{}()/\|^&*-=+'"–—―
AnsiEscapeTimeout                      : 100
PredictionSource                       : None
CommandColor                           : "`e[91m"
CommentColor                           : "`e[32m"
ContinuationPromptColor                : "`e[37m"
DefaultTokenColor                      : "`e[37m"
EmphasisColor                          : "`e[33m"
ErrorColor                             : "`e[91m"
KeywordColor                           : "`e[92m"
MemberColor                            : "`e[34m"
NumberColor                            : "`e[34m"
OperatorColor                          : "`e[35m"
ParameterColor                         : "`e[35m"
InlinePredictionColor                  : "`e[38;5;238m"
SelectionColor                         : "`e[30;47m"
StringColor                            : "`e[36m"
TypeColor                              : "`e[37m"
VariableColor                          : "`e[33m"



# 5.	Determining the VS Code theme name




no output



# 6. No output
